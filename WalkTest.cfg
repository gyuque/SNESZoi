#------------------------------------------------------------------------------
#		メモリマップ
#------------------------------------------------------------------------------
MEMORY {
	ROMST:		start = $008000, size = $7fc0, type = ro, file = %O, fill = yes, define = yes;
	ROMINFO:	start = $00ffc0, size = $0040, type = ro, file = %O, fill = yes, define = yes;
	ZP:		start = $000000, size = $0020, type = rw, define = yes;
	RAM:		start = $7e2000, size = $e000, type = rw, define = yes;
	STACK:		start = $000000, size = $2000, type = rw, define = yes;
	SRAM:		start = $006000, size = $2000, type = rw, define = yes;
}
#------------------------------------------------------------------------------
#		セグメントマップ
#------------------------------------------------------------------------------
SEGMENTS {
	STARTUP:	load = ROMST,		type = ro,	define = yes;
	CARTINFO:	load = ROMINFO,		type = ro,	define = yes;
	RODATA:		load = ROMST,		type = ro,	define = yes;
	DATA:		load = ROMST, run = RAM,type = rw,	define = yes;
	BSS:		load = RAM,		type = bss,	define = yes;
	ZEROPAGE:	load = ZP,		type = zp;
	CODE:		load = ROMST,		type = ro,	define = yes;
}
#------------------------------------------------------------------------------
#		
#------------------------------------------------------------------------------
FEATURES {
	CONDES: segment = RODATA,
		type = constructor,
		label = __CONSTRUCTOR_TABLE__,
		count = __CONSTRUCTOR_COUNT__;
	CONDES: segment = RODATA,
		type = destructor,
		label = __DESTRUCTOR_TABLE__,
		count = __DESTRUCTOR_COUNT__;
}
#------------------------------------------------------------------------------
#		
#------------------------------------------------------------------------------
SYMBOLS {
	__STACKSIZE__ = $0200;
}
